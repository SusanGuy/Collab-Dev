{"version":3,"sources":["actions/alert.js","actions/actionTypes.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Spinner.js","components/auth/Login.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/auth/Register.js","reducers/alert.js","reducers/auth.js","reducers/post.js","reducers/profile.js","reducers/index.js","store.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile_form/CreateProfile.js","components/profile_form/EditForm.js","components/profile_form/AddExperience.js","components/profile_form/AddEducation.js","components/Profiles/ProfileItem.js","components/Profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/GithubRepo.js","components/profile/ProfileGithub.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/Profile.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","App.js","index.js"],"names":["setAlert","msg","alertType","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","async","localStorage","get","res","data","logout","connect","state","isAuthenticated","auth","loading","authLinks","to","className","onClick","guessLinks","Landing","protoTypes","PropTypes","bool","isRequired","Spinner","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","PostItem","addLikes","removeLikes","deletePost","showActions","pathname","user","src","avatar","alt","text","format","date","_id","likes","length","comments","defaultProps","put","status","delete","addPost","setText","cols","rows","getPosts","posts","useEffect","map","key","register","password2","minLength","initialState","getItem","profile","profiles","repos","combineReducers","alert","action","filter","setItem","removeItem","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Alert","alerts","prototype","array","getProfile","createProfile","history","edit","push","DashboardActions","deleteExperience","experience","experiences","exp","company","title","from","deleteEducation","education","educations","school","major","deleteProfile","Component","component","rest","render","props","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","displaySocialInputs","toggleSocialInputs","console","log","join","socials","addExperience","current","description","toDateDisabled","toggleDisabled","checked","disabled","addEducation","degree","ProfileItem","skill","getAllProfiles","ProfileTop","href","rel","GithubRepo","repo","html_url","stargazers_count","watchers_count","forks_count","getRepos","username","style","fontSize","fontDecoration","color","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getUserProfile","match","params","edu","addComment","postId","deleteComment","commentId","getPost","NotFound","App","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dfc112d3.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport uuid from \"uuid\";\n\nexport const setAlert = (msg, alertType) => {\n  return dispatch => {\n    const id = uuid.v4();\n    dispatch({\n      type: actionTypes.SET_ALERT,\n      payload: {\n        msg,\n        alertType,\n        id\n      }\n    });\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.REMOVE_ALERT,\n        payload: id\n      });\n    }, 3000);\n  };\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const ClEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const GET_ALL_PROFILES = \"GET_ALL_PROFILES\";\nexport const GET_GITHUB_PROFILE = \"GET_GITHUB_PROFILE\";\nexport const GITHUB_PROFILE_ERROR = \"GITHUB_PROFILE_ERROR\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const GET_POST = \"GET_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const loadUser = () => {\n  return async dispatch => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/auth\");\n\n      dispatch({\n        type: actionTypes.USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.AUTH_ERROR\n      });\n    }\n  };\n};\n\nexport const register = ({ name, email, password }) => {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.ClEAR_PROFILE\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({ name, email, password });\n    try {\n      const res = await axios.post(\"/users\", body, config);\n      dispatch({\n        type: actionTypes.REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.REGISTER_FAIL\n      });\n    }\n  };\n};\n\nexport const login = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.ClEAR_PROFILE\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({ email, password });\n    try {\n      const res = await axios.post(\"/auth\", body, config);\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          token: res.data.token\n        }\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      });\n    }\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.LOGOUT\n    });\n\n    dispatch({\n      type: actionTypes.ClEAR_PROFILE\n    });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\nconst Navbar = ({ logout, isAuthenticated, loading }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profile\">Developers</Link>\n      </li>\n\n      <li>\n        <Link to=\"/posts\">Posts</Link>\n      </li>\n\n      <li>\n        <Link to=\"/dashboard\">\n          <i className=\"fas fa-user\"></i>\n          <span className=\"hide-sm\">Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/login\" onClick={logout}>\n          <i className=\"fas fa-sign-out-alt\">\n            <span className=\"hide-sm\">Logout</span>\n          </i>\n        </Link>\n      </li>\n    </ul>\n  );\n\n  const guessLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profile\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </ul>\n  );\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\"> Collab-Dev</i>\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guessLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n  };\n};\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <section className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1 className=\"x-large\">Developer Collaborator</h1>\n          <p className=\"lead\">\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className=\"buttons\">\n            <Link to=\"register\" className=\"btn btn-primary\">\n              Sign Up\n            </Link>\n            <Link to=\"login\" className=\"btn btn-light\">\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.protoTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Landing);\n","import React from \"react\";\nconst Spinner = () => {\n  return <div className=\"Loader\">Loading...</div>;\n};\nexport default Spinner;\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\n\nconst Login = ({ login, isAuthenticated, loading }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Sign In</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Sign into Your Account\n      </p>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>\n      <p className=\"my-1\">\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n  };\n};\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { addLikes, removeLikes, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  post,\n  auth,\n  addLikes,\n  removeLikes,\n  deletePost,\n  showActions\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link\n          to={{\n            pathname: `/profile/${post.user}`,\n            id: post.user\n          }}\n        >\n          <img className=\"round-img\" src={post.avatar} alt=\"\" />\n          <h4>{post.name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{post.text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{post.date}</Moment>\n        </p>\n        {showActions && (\n          <Fragment>\n            <button\n              type=\"button\"\n              onClick={e => addLikes(post._id)}\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\"></i>\n              <span> {post.likes.length}</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={e => removeLikes(post._id)}\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <Link to={`post/${post._id}`} className=\"btn btn-primary\">\n              Discussion{\" \"}\n              {post.comments.length > 0 && (\n                <span className=\"comment-count\">{post.comments.length}</span>\n              )}\n            </Link>\n            {!auth.loading && post.user === auth.user._id && (\n              <button\n                type=\"button\"\n                onClick={e => deletePost(post._id)}\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLikes: PropTypes.func.isRequired,\n  removeLikes: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\nexport default connect(mapStateToProps, { addLikes, removeLikes, deletePost })(\n  PostItem\n);\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nexport const getPosts = () => {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.ClEAR_PROFILE\n    });\n    try {\n      const res = await axios.get(\"/posts\");\n      dispatch({\n        type: actionTypes.GET_POSTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const getPost = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/posts/${id}`);\n      dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addLikes = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(`/posts/like/${id}`);\n\n      dispatch({\n        type: actionTypes.UPDATE_LIKES,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const removeLikes = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(`/posts/unlike/${id}`);\n      dispatch({\n        type: actionTypes.UPDATE_LIKES,\n        payload: { id, likes: res.data }\n      });\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deletePost = id => {\n  return async dispatch => {\n    try {\n      await axios.delete(`/posts/${id}`);\n      dispatch({\n        type: actionTypes.DELETE_POST,\n        payload: id\n      });\n      dispatch(setAlert(\"Post Removed\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addPost = formData => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      const res = await axios.post(`/posts`, formData, config);\n      dispatch({\n        type: actionTypes.ADD_POST,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Post Created\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addComment = (postId, formData) => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      const res = await axios.post(\n        `/posts/comment/${postId}`,\n        formData,\n        config\n      );\n      dispatch({\n        type: actionTypes.ADD_COMMENT,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Comment Added\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deleteComment = (postId, commentId) => {\n  return async dispatch => {\n    try {\n      await axios.delete(`/posts/comment/${postId}/${commentId}`);\n      dispatch({\n        type: actionTypes.REMOVE_COMMENT,\n        payload: commentId\n      });\n      dispatch(setAlert(\"Comment Removed\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: actionTypes.POST_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className=\"form my-1\"\n        onSubmit={e => {\n          e.preventDefault();\n          addPost({ text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          onChange={e => {\n            setText(e.target.value);\n          }}\n          value={text}\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a post\"\n          required\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPosts } from \"../../actions/post\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\n\nconst Posts = ({ post: { posts, loading }, getPosts }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Posts</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome to the community!\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map(post => {\n          return <PostItem key={post._id} post={post} />;\n        })}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    post: state.post\n  };\n};\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\n\nconst Register = ({ setAlert, register, isAuthenticated, loading }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  const { name, email, password, password2 } = formData;\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Password do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Create Your Account\n      </p>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            required\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            required\n            value={password2}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n","import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.SET_ALERT:\n      return [...state, payload];\n    case actionTypes.REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.LOGIN_SUCCESS:\n    case actionTypes.REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case actionTypes.LOGIN_FAIL:\n    case actionTypes.AUTH_ERROR:\n    case actionTypes.REGISTER_FAIL:\n    case actionTypes.LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case actionTypes.USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case actionTypes.GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n\n    case actionTypes.UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id\n            ? {\n                ...post,\n                likes: payload.likes\n              }\n            : post\n        ),\n        loading: false\n      };\n\n    case actionTypes.DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case actionTypes.ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case actionTypes.ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case actionTypes.REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n\n    case actionTypes.POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.GET_PROFILE:\n    case actionTypes.UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n        error: null\n      };\n    case actionTypes.GET_GITHUB_PROFILE:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      };\n    case actionTypes.GITHUB_PROFILE_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      };\n    case actionTypes.PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null\n      };\n\n    case actionTypes.GET_ALL_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n\n    case actionTypes.ClEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n        error: null\n      };\n\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport post from \"./post\";\nimport profile from \"./profile\";\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.prototype = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    alerts: state.alert\n  };\n};\n\nexport default connect(mapStateToProps)(Alert);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { logout } from \"./auth\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nexport const getProfile = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/profile/me\");\n\n      dispatch({\n        type: actionTypes.GET_PROFILE,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: error.response.data.msg,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const createProfile = (formData, history, edit = false) => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      const res = await axios.post(\"/profile\", formData, config);\n      dispatch({\n        type: actionTypes.GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(\n        setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")\n      );\n\n      history.push(\"/dashboard\");\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addExperience = (formData, history) => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.put(\"/profile/experience\", formData, config);\n\n      dispatch({\n        type: actionTypes.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Experience Added\", \"success\"));\n\n      history.push(\"/dashboard\");\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const addEducation = (formData, history) => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.put(\"/profile/education\", formData, config);\n      dispatch({\n        type: actionTypes.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Education Added\", \"success\"));\n\n      history.push(\"/dashboard\");\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deleteExperience = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/profile/experience/${id}`);\n      dispatch({\n        type: actionTypes.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Experience Deleted\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deleteEducation = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(`/profile/education/${id}`);\n      dispatch({\n        type: actionTypes.UPDATE_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Education Deleted\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => {\n          return dispatch(setAlert(error.msg, \"danger\"));\n        });\n      }\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const deleteProfile = () => {\n  return async dispatch => {\n    try {\n      await axios.delete(\"/profile/\");\n      dispatch(logout());\n      dispatch(setAlert(\"Profile Deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: err.response.data,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const getAllProfiles = () => {\n  return async dispatch => {\n    dispatch({\n      type: actionTypes.ClEAR_PROFILE\n    });\n    try {\n      const res = await axios.get(\"/profile/\");\n      dispatch({\n        type: actionTypes.GET_ALL_PROFILES,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: error.response.data,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const getUserProfile = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/profile/user/${id}`);\n      dispatch({\n        type: actionTypes.GET_PROFILE,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.PROFILE_ERROR,\n        payload: {\n          msg: error.response.data,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n\nexport const getRepos = username => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: actionTypes.SET_LOADING\n      });\n      const res = await axios.get(`/profile/github/${username}`);\n      dispatch({\n        type: actionTypes.GET_GITHUB_PROFILE,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: actionTypes.GITHUB_PROFILE_ERROR,\n        payload: {\n          msg: error.response.data,\n          status: error.response.status\n        }\n      });\n    }\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n      </Link>\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\n      </Link>\n      <Link to=\"/add-education\" className=\"btn btn-light\">\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteExperience } from \"../../actions/profile\";\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map(exp => {\n    return (\n      <tr key={exp._id}>\n        <td>{exp.company}</td>\n        <td className=\"hide-sm\">{exp.title}</td>\n        <td>\n          <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment>-{\" \"}\n          {exp.to === null ? (\n            \"Now\"\n          ) : (\n            <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => deleteExperience(exp._id)}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { deleteEducation } from \"../../actions/profile\";\nimport PropTypes from \"prop-types\";\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map(exp => {\n    return (\n      <tr key={exp._id}>\n        <td>{exp.school}</td>\n        <td className=\"hide-sm\">{exp.major}</td>\n        <td>\n          <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment>-{\" \"}\n          {exp.to === null ? (\n            \"Now\"\n          ) : (\n            <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\n          )}\n        </td>\n        <td>\n          <button\n            onClick={() => deleteEducation(exp._id)}\n            className=\"btn btn-danger\"\n          >\n            {\" \"}\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProfile, deleteProfile } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dashboard = ({\n  getProfile,\n  deleteProfile,\n  auth: { user },\n  profile: { profile, error, loading }\n}) => {\n  useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  if (profile === null) {\n    if (error && !loading) {\n      return (\n        <Fragment>\n          <h1 className=\"large text-primary\">Dashboard</h1>\n          <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n          </p>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n      </p>\n      <DashboardActions />\n      <Experience experience={profile.experiences} />\n      <Education education={profile.education} />\n      <div className=\"my-2\">\n        <button className=\"btn btn-danger\" onClick={() => deleteProfile()}>\n          <i className=\"fas fa-user-minus\" /> Delete My Account\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  deleteProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { auth: state.auth, profile: state.profile };\n};\n\nexport default connect(mapStateToProps, {\n  getProfile,\n  deleteProfile\n})(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!isAuthenticated && !loading) {\n        return <Redirect to=\"/login\"></Redirect>;\n      } else {\n        if (loading) {\n          return <Spinner />;\n        }\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"../../actions/profile\";\n\nconst CreateProfile = ({ createProfile, history, profile: { profile } }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    bio: \"\",\n    status: \"\",\n    githubusername: \"\",\n    skills: \"\",\n    youtube: \"\",\n    facebook: \"\",\n    twitter: \"\",\n    instagram: \"\",\n    linkedin: \"\"\n  });\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    youtube,\n    facebook,\n    twitter,\n    instagram,\n    linkedin\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  if (profile !== null) {\n    console.log(\"mama\");\n    return <Redirect to=\"/edit-profile\" />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, { createProfile })(\n  withRouter(CreateProfile)\n);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProfile, createProfile } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  getProfile,\n  createProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    bio: \"\",\n    status: \"\",\n    githubusername: \"\",\n    skills: \"\",\n    youtube: \"\",\n    facebook: \"\",\n    twitter: \"\",\n    instagram: \"\",\n    linkedin: \"\"\n  });\n\n  useEffect(() => {\n    getProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.socials ? \"\" : profile.socials.twitter,\n      facebook: loading || !profile.socials ? \"\" : profile.socials.facebook,\n      linkedin: loading || !profile.socials ? \"\" : profile.socials.linkedin,\n      youtube: loading || !profile.socials ? \"\" : profile.socials.youtube,\n      instagram: loading || !profile.socials ? \"\" : profile.socials.instagram\n    });\n  }, [loading, getProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    youtube,\n    facebook,\n    twitter,\n    instagram,\n    linkedin\n  } = formData;\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, { createProfile, getProfile })(\n  withRouter(EditProfile)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = ({ history, addExperience }) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    company: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\"\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { title, company, location, from, to, current, description } = formData;\n\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add An Experience</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            required\n            value={title}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            required\n            value={company}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Job\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = ({ history, addEducation }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    major: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\"\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { school, degree, major, from, to, current, description } = formData;\n\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add Your Education</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc\n        that you have attended\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={school}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={degree}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field Of Study\"\n            name=\"major\"\n            value={major}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileItem = ({ profile }) => {\n  return (\n    <Fragment>\n      <div className=\"profile bg-light\">\n        <img className=\"round-img\" src={profile.user.avatar} alt=\"\" />\n        <div>\n          <h2>{profile.user.name}</h2>\n          <p>\n            {profile.status} at {profile.company}\n          </p>\n          <p className=\"my-1\">\n            {profile.location && <span>{profile.location}</span>}\n          </p>\n          <Link to={`/profile/${profile.user._id}`} className=\"btn btn-primary\">\n            View Profile\n          </Link>\n        </div>\n\n        <ul>\n          {profile.skills.map(skill => {\n            return (\n              <Fragment key={skill}>\n                <li className=\"text-primary\">\n                  <i className=\"fas fa-check\"></i> {skill}\n                </li>\n              </Fragment>\n            );\n          })}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getAllProfiles } from \"../../actions/profile\";\nimport ProfileItem from \"./ProfileItem\";\n\nconst Profiles = ({ profile: { profiles, loading }, getAllProfiles }) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  if (loading === true || profiles.length === 0) {\n    return <Spinner />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Developers</h1>\n      <p className=\"lead\">\n        <i className=\"fab fa-connectdevelop\"></i> Browse and connect with\n        developers\n      </p>\n      <div className=\"profiles\">\n        {profiles.length > 0 ? (\n          profiles.map(profile => {\n            return <ProfileItem key={profile._id} profile={profile} />;\n          })\n        ) : (\n          <h4> No Profiles Found... </h4>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getAllProfiles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({ profile }) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={profile.user.avatar} alt=\"\" />\n      <h1 className=\"large\">{profile.user.name}</h1>\n      <p className=\"lead\">\n        {profile.status} {profile.company && <span>at {profile.company} </span>}\n      </p>\n      <p>{profile.location && <span>{profile.location}</span>}</p>\n      <div className=\"icons my-1\">\n        {profile.website && (\n          <a href={profile.website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {profile.socials && profile.socials.twitter && (\n          <a\n            href={`https://www.twitter.com/${profile.socials.twitter}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n        {profile.socials && profile.socials.facebook && (\n          <a\n            href={`https://www.facebook.com/${profile.socials.facebook}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n        {profile.socials && profile.socials.linkedin && (\n          <a\n            href={`https://www.linkedin.com/in/${profile.socials.linkedin}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n        {profile.socials && profile.socials.youtube && (\n          <a\n            href={`https://www.youtube.com/${profile.socials.youtube}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n        {profile.socials && profile.socials.instagram && (\n          <a\n            href={`https://www.instagram.com/${profile.socials.instagram}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-instagram fa-2x\"></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GithubRepo = ({ repo }) => {\n  return (\n    <div className=\"repo bg-white p-1 my-1\">\n      <div>\n        <h4>\n          <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {repo.name}\n          </a>\n        </h4>\n        {repo.description && <p>{repo.description}</p>}\n      </div>\n      <div>\n        <ul>\n          <li className=\"badge badge-primary\">\n            Stars: {repo.stargazers_count}\n          </li>\n          <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\n          <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nGithubRepo.propTypes = {\n  repo: PropTypes.object.isRequired\n};\n\nexport default GithubRepo;\n","import React, { useEffect } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport GithubRep from \"./GithubRepo\";\nimport { getRepos } from \"../../actions/profile\";\n\nconst ProfileGithub = ({ username, getRepos, repos, loading }) => {\n  useEffect(() => {\n    getRepos(username);\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">\n        <i className=\"fab fa-github\"></i> Github Repos\n        {repos.length === 0 ? (\n          <p\n            style={{\n              fontSize: \"14px\",\n              fontDecoration: \"none\",\n              color: \"black\"\n            }}\n          >\n            No repos found..\n          </p>\n        ) : (\n          repos.map(repo => {\n            return <GithubRep key={repo.id} repo={repo} />;\n          })\n        )}\n      </h2>\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    repos: state.profile.repos,\n    loading: state.profile.loading\n  };\n};\n\nexport default connect(mapStateToProps, { getRepos })(ProfileGithub);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({ profile }) => {\n  return (\n    <div className=\"profile-about bg-light p-2\">\n      {profile.bio && (\n        <Fragment>\n          <h2 className=\"text-primary\">\n            {profile.user.name.trim().split(\" \")[0]}'s Bio\n          </h2>\n          <p>{profile.bio}</p>\n          <div className=\"line\"></div>\n        </Fragment>\n      )}\n\n      <h2 className=\"text-primary\">Skill Set</h2>\n      <div className=\"skills\">\n        {profile.skills.map(skill => {\n          return (\n            <div key={skill} className=\"p-1\">\n              <i className=\"fa fa-check\"></i> {skill}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileExperience = ({ experience }) => {\n  return (\n    <div>\n      <h3 className=\"text-dark\">{experience.company}</h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{experience.from}</Moment> -{\" \"}\n        {experience.to ? (\n          <Moment format=\"YYYY/MM/DD\">{experience.to}</Moment>\n        ) : (\n          \"Now\"\n        )}\n      </p>\n      <p>\n        <strong>Position: </strong>\n        {experience.title}\n      </p>\n      {experience.description && (\n        <p>\n          <strong>Description: </strong>\n          {experience.description}\n        </p>\n      )}\n    </div>\n  );\n};\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired\n};\n\nexport default ProfileExperience;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Moment from \"react-moment\";\n\nconst ProfileEducation = ({ education }) => {\n  return (\n    <div>\n      <h3>{education.school}</h3>\n      <p>\n        <Moment format=\"YYYY/MM/DD\">{education.from}</Moment> -{\" \"}\n        {education.to ? (\n          <Moment format=\"YYYY/MM/DD\">{education.to}</Moment>\n        ) : (\n          \"Now\"\n        )}\n      </p>\n      <p>\n        <strong>Degree: </strong>\n        {education.degree}\n      </p>\n      <p>\n        <strong>Field Of Study: </strong>\n        {education.major}\n      </p>\n      {education.description && (\n        <p>\n          <strong>Description: </strong>\n          {education.description}\n        </p>\n      )}\n    </div>\n  );\n};\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired\n};\n\nexport default ProfileEducation;\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { connect } from \"react-redux\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport { getUserProfile } from \"../../actions/profile\";\n\nconst Profile = ({\n  match,\n  getUserProfile,\n  profile: { profile, error, loading },\n  auth,\n  location\n}) => {\n  useEffect(() => {\n    getUserProfile(match.params.id);\n  }, [getUserProfile]);\n\n  if (profile === null) {\n    if (error) {\n      return (\n        <Fragment>\n          <p>No profile added yet ...</p>\n          {loading === false && auth.user._id === location.id && (\n            <Link to=\"/create-profile\" className=\"btn btn-dark\">\n              Add Profile\n            </Link>\n          )}\n        </Fragment>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n\n  return (\n    <Fragment>\n      <Link to=\"/profile\" className=\"btn btn-light\">\n        Back To Profiles\n      </Link>\n      {auth.isAuthenticated &&\n        auth.loading === false &&\n        auth.user._id === profile.user._id && (\n          <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n            Edit Profile\n          </Link>\n        )}\n\n      <div className=\"profile-grid my-1\">\n        <ProfileTop profile={profile} />\n        <ProfileAbout profile={profile} />\n        <div className=\"profile-exp bg-white p-2\">\n          <h2 className=\"text-primary\">Experience</h2>\n          {profile.experiences.length > 0 ? (\n            <Fragment>\n              {profile.experiences.map(exp => {\n                return <ProfileExperience key={exp._id} experience={exp} />;\n              })}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <h4>\"No experience info yet ...\"</h4>\n              {auth.isAuthenticated &&\n                auth.loading === false &&\n                auth.user._id === profile.user._id && (\n                  <Link to=\"/add-experience\" className=\"btn btn-dark m-1\">\n                    Add Experience\n                  </Link>\n                )}\n            </Fragment>\n          )}\n        </div>\n\n        <div className=\"profile-edu bg-white p-2\">\n          <h2 className=\"text-primary\">Education</h2>\n          {profile.education.length > 0 ? (\n            <Fragment>\n              {profile.education.map(edu => {\n                return <ProfileEducation key={edu._id} education={edu} />;\n              })}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <h4>\"No education info yet ...\"</h4>\n              {auth.isAuthenticated &&\n                auth.loading === false &&\n                auth.user._id === profile.user._id && (\n                  <Link to=\"/add-education\" className=\"btn btn-dark m-1\">\n                    Add Education\n                  </Link>\n                )}\n            </Fragment>\n          )}\n        </div>\n        {profile.githubusername && (\n          <ProfileGithub username={profile.githubusername} />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getUserProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(Profile);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Leave a Comment</h3>\n      </div>\n      <form\n        className=\"form my-1\"\n        onSubmit={e => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          onChange={e => {\n            setText(e.target.value);\n          }}\n          value={text}\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a post\"\n          required\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            type=\"button\"\n            onClick={e => deleteComment(postId, _id)}\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getPost } from \"../../actions/post\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"../post/CommentForm\";\nimport CommentItem from \"../post/CommentItem\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  if (loading || post === null) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <Fragment>\n        <Link to=\"/posts\" className=\"btn\">\n          Go back\n        </Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n          {post.comments.map(comment => {\n            return (\n              <CommentItem\n                key={comment._id}\n                comment={comment}\n                postId={post._id}\n              />\n            );\n          })}\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = props => {\n  return (\n    <section className=\"page_404\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 \">\n            <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n              <div className=\"four_zero_four_bg\">\n                <h1 className=\"text-center \">404</h1>\n              </div>\n\n              <div className=\"contant_box_404\">\n                <h3 className=\"h2\">Look like you're lost</h3>\n\n                <p>the page you are looking for not avaible!</p>\n\n                <Link to=\"/dashboard\" className=\"link_404\">\n                  Go to Home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import React, { Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Posts from \"./components/posts/Posts\";\nimport Register from \"./components/auth/Register\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile_form/CreateProfile\";\nimport EditProfile from \"./components/profile_form/EditForm\";\nimport AddExperience from \"./components/profile_form/AddExperience\";\nimport AddEducation from \"./components/profile_form/AddEducation\";\nimport Profiles from \"./components/Profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Post from \"./components/post/Post\";\nimport NotFound from \"./components/layout/NotFound\";\nimport \"./App.css\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/profile\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path=\"/post/:id\" component={Post} />\n              <Route component={NotFound} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}